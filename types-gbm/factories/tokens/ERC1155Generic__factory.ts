/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC1155Generic,
  ERC1155GenericInterface,
} from "../../tokens/ERC1155Generic";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600280546001600160a01b0319163317905560408051808201909152600f8082526e47656e65726963204552433131353560881b60209092019182526200005c9160009162000094565b506040805180820190915260078082526647454e3131353560c81b60209092019182526200008d9160019162000094565b5062000177565b828054620000a2906200013a565b90600052602060002090601f016020900481019282620000c6576000855562000111565b82601f10620000e157805160ff191683800117855562000111565b8280016001018555821562000111579182015b8281111562000111578251825591602001919060010190620000f4565b506200011f92915062000123565b5090565b5b808211156200011f576000815560010162000124565b600181811c908216806200014f57607f821691505b602082108114156200017157634e487b7160e01b600052602260045260246000fd5b50919050565b61173780620001876000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80634e1273f4116100715780634e1273f4146101855780638da5cb5b146101a557806395d89b41146101d0578063a22cb465146101d8578063e985e9c5146101eb578063f242432a1461022757600080fd5b8062fdd58e146100b857806301ffc9a71461010157806306fdde03146101355780631b2ef1ca1461014a5780632eb2c2d61461015f5780633d5d190c14610172575b600080fd5b6100ee6100c63660046112dc565b6001600160a01b03919091166000908152600360209081526040808320938352929052205490565b6040519081526020015b60405180910390f35b61012561010f366004611372565b6001600160e01b031916636cdb3d1360e11b1490565b60405190151581526020016100f8565b61013d61023a565b6040516100f891906115ad565b61015d6101583660046113ac565b6102c8565b005b61015d61016d36600461116d565b610404565b61015d610180366004611306565b610920565b610198610193366004611306565b610b19565b6040516100f89190611569565b6002546101b8906001600160a01b031681565b6040516001600160a01b0390911681526020016100f8565b61013d610c5f565b61015d6101e63660046112a0565b610c6c565b6101256101f936600461113a565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b61015d610235366004611228565b610cd8565b6000805461024790611650565b80601f016020809104026020016040519081016040528092919081815260200182805461027390611650565b80156102c05780601f10610295576101008083540402835291602001916102c0565b820191906000526020600020905b8154815290600101906020018083116102a357829003601f168201915b505050505081565b3360009081526003602090815260408083208584529091529020546102ee908290611602565b33600081815260036020908152604080832087845282528083209490945583518681529081018590529192909183917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461035133611032565b156104005760405163f23a6e6160e01b808252336004830181905260248301819052604483018590526064830184905260a06084840152600060a4840152909163f23a6e619060c401602060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec919061138f565b6001600160e01b0319161461040057600080fd5b5050565b336001600160a01b038916148061043e57506001600160a01b038816600090815260046020908152604080832033845290915290205460ff165b6104c95760405162461bcd60e51b815260206004820152604b60248201527f7361666542617463685472616e7366657246726f6d3a206d73672e73656e646560448201527f72206973206e6f7420616c6c6f77656420746f206d616e6970756c617465205f60648201526a66726f6d20746f6b656e7360a81b608482015260a4015b60405180910390fd5b6001600160a01b0387166105355760405162461bcd60e51b815260206004820152602d60248201527f7361666542617463685472616e7366657246726f6d3a2063616e6e6f7420747260448201526c0616e7366657220746f2030783609c1b60648201526084016104c0565b8483146105aa5760405162461bcd60e51b815260206004820152603760248201527f7361666542617463685472616e7366657246726f6d3a205f69647320616e642060448201527f5f76616c756573206c656e676874206d69736d6174636800000000000000000060648201526084016104c0565b60005b8581101561080a576001600160a01b0389166000908152600360205260408120908888848181106105e0576105e06116bc565b90506020020135815260200190815260200160002054858583818110610608576106086116bc565b9050602002013511156106995760405162461bcd60e51b815260206004820152604d60248201527f7361666542617463685472616e7366657246726f6d3a2042616c616e6365206f60448201527f66205f66726f6d20697320746f6f206c6f7720746f207472616e73666572205f60648201526c76616c75657320746f6b656e7360981b608482015260a4016104c0565b8484828181106106ab576106ab6116bc565b90506020020135600360008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008989858181106106eb576106eb6116bc565b9050602002013581526020019081526020016000205461070b9190611639565b6001600160a01b038a16600090815260036020526040812090898985818110610736576107366116bc565b90506020020135815260200190815260200160002081905550848482818110610761576107616116bc565b90506020020135600360008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008989858181106107a1576107a16116bc565b905060200201358152602001908152602001600020546107c19190611602565b6001600160a01b0389166000908152600360205260408120908989858181106107ec576107ec6116bc565b905060200201358152602001908152602001600020819055506105ad565b876001600160a01b0316896001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a8a8a8a60405161085d9493929190611537565b60405180910390a461086e88611032565b156109155760405163bc197c8160e01b808252906001600160a01b038a169063bc197c81906108af9033908e908d908d908d908d908d908d9060040161142d565b602060405180830381600087803b1580156108c957600080fd5b505af11580156108dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610901919061138f565b6001600160e01b0319161461091557600080fd5b505050505050505050565b82811461097e5760405162461bcd60e51b815260206004820152602660248201527f6d696e743a205f69647320616e64205f76616c756573206c656e676874206d696044820152650e6dac2e8c6d60d31b60648201526084016104c0565b60005b83811015610a295782828281811061099b5761099b6116bc565b336000908152600360209081526040822092029390930135929091508787858181106109c9576109c96116bc565b905060200201358152602001908152602001600020546109e99190611602565b33600090815260036020526040812090878785818110610a0b57610a0b6116bc565b90506020020135815260200190815260200160002081905550610981565b604051339060009082907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90610a66908a908a908a908a90611537565b60405180910390a4610a7733611032565b15610b125760405163bc197c8160e01b80825290339063bc197c8190610aac9083906000908b908b908b908b90600401611491565b602060405180830381600087803b158015610ac657600080fd5b505af1158015610ada573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afe919061138f565b6001600160e01b03191614610b1257600080fd5b5050505050565b606083826000610b29828461161a565b67ffffffffffffffff811115610b4157610b416116d2565b604051908082528060200260200182016040528015610b6a578160200160208202803683370190505b5090506000805b84821015610c51575b83811015610c3c57600360008b8b85818110610b9857610b986116bc565b9050602002016020810190610bad9190611118565b6001600160a01b03166001600160a01b031681526020019081526020016000206000898984818110610be157610be16116bc565b9050602002013581526020019081526020016000205483828685610c05919061161a565b610c0f9190611602565b81518110610c1f57610c1f6116bc565b602090810291909101015280610c348161168b565b915050610b7a565b50600081610c498161168b565b925050610b71565b509098975050505050505050565b6001805461024790611650565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b0387161480610d1257506001600160a01b038616600090815260046020908152604080832033845290915290205460ff165b610d935760405162461bcd60e51b815260206004820152604660248201527f736166655472616e7366657246726f6d3a206d73672e73656e6465722069732060448201527f6e6f7420616c6c6f77656420746f206d616e6970756c617465205f66726f6d20606482015265746f6b656e7360d01b608482015260a4016104c0565b6001600160a01b038516610dfa5760405162461bcd60e51b815260206004820152602860248201527f736166655472616e7366657246726f6d3a2063616e6e6f74207472616e73666560448201526707220746f203078360c41b60648201526084016104c0565b6001600160a01b0386166000908152600360209081526040808320878452909152902054831115610ea35760405162461bcd60e51b815260206004820152604760248201527f736166655472616e7366657246726f6d3a2042616c616e6365206f66205f667260448201527f6f6d20697320746f6f206c6f7720746f207472616e73666572205f76616c756560648201526620746f6b656e7360c81b608482015260a4016104c0565b6001600160a01b0386166000908152600360209081526040808320878452909152902054610ed2908490611639565b6001600160a01b0380881660009081526003602081815260408084208a8552825280842095909555928916825282528281208782529091522054610f17908490611602565b6001600160a01b0386811660008181526003602090815260408083208a845282529182902094909455805188815293840187905290929189169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610f8785611032565b1561102a5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190610fc49033908b908a908a908a908a906004016114f0565b602060405180830381600087803b158015610fde57600080fd5b505af1158015610ff2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611016919061138f565b6001600160e01b0319161461102a57600080fd5b505050505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061106657508115155b949350505050565b80356001600160a01b038116811461108557600080fd5b919050565b60008083601f84011261109c57600080fd5b50813567ffffffffffffffff8111156110b457600080fd5b6020830191508360208260051b85010111156110cf57600080fd5b9250929050565b60008083601f8401126110e857600080fd5b50813567ffffffffffffffff81111561110057600080fd5b6020830191508360208285010111156110cf57600080fd5b60006020828403121561112a57600080fd5b6111338261106e565b9392505050565b6000806040838503121561114d57600080fd5b6111568361106e565b91506111646020840161106e565b90509250929050565b60008060008060008060008060a0898b03121561118957600080fd5b6111928961106e565b97506111a060208a0161106e565b9650604089013567ffffffffffffffff808211156111bd57600080fd5b6111c98c838d0161108a565b909850965060608b01359150808211156111e257600080fd5b6111ee8c838d0161108a565b909650945060808b013591508082111561120757600080fd5b506112148b828c016110d6565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561124157600080fd5b61124a8761106e565b95506112586020880161106e565b94506040870135935060608701359250608087013567ffffffffffffffff81111561128257600080fd5b61128e89828a016110d6565b979a9699509497509295939492505050565b600080604083850312156112b357600080fd5b6112bc8361106e565b9150602083013580151581146112d157600080fd5b809150509250929050565b600080604083850312156112ef57600080fd5b6112f88361106e565b946020939093013593505050565b6000806000806040858703121561131c57600080fd5b843567ffffffffffffffff8082111561133457600080fd5b6113408883890161108a565b9096509450602087013591508082111561135957600080fd5b506113668782880161108a565b95989497509550505050565b60006020828403121561138457600080fd5b8135611133816116e8565b6000602082840312156113a157600080fd5b8151611133816116e8565b600080604083850312156113bf57600080fd5b50508035926020909101359150565b81835260006001600160fb1b038311156113e757600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a06040820181905260009061145a908301888a6113ce565b828103606084015261146d8187896113ce565b90508281036080840152611482818587611404565b9b9a5050505050505050505050565b6001600160a01b0387811682528616602082015260a0604082018190526000906114be90830186886113ce565b82810360608401526114d18185876113ce565b8381036080909401939093525050600081526020019695505050505050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905260009061152b9083018486611404565b98975050505050505050565b60408152600061154b6040830186886113ce565b828103602084015261155e8185876113ce565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156115a157835183529284019291840191600101611585565b50909695505050505050565b600060208083528351808285015260005b818110156115da578581018301518582016040015282016115be565b818111156115ec576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115611615576116156116a6565b500190565b6000816000190483118215151615611634576116346116a6565b500290565b60008282101561164b5761164b6116a6565b500390565b600181811c9082168061166457607f821691505b6020821081141561168557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561169f5761169f6116a6565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146116fe57600080fd5b5056fea2646970667358221220485af5f59ca2717cc3ec41cc31d4a07270803228cf318edb32714f47dbace4e764736f6c63430008050033";

type ERC1155GenericConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155GenericConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Generic__factory extends ContractFactory {
  constructor(...args: ERC1155GenericConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Generic> {
    return super.deploy(overrides || {}) as Promise<ERC1155Generic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Generic {
    return super.attach(address) as ERC1155Generic;
  }
  override connect(signer: Signer): ERC1155Generic__factory {
    return super.connect(signer) as ERC1155Generic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155GenericInterface {
    return new utils.Interface(_abi) as ERC1155GenericInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Generic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Generic;
  }
}
